"use strict";(self.webpackChunketmp=self.webpackChunketmp||[]).push([[1392],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=u(n),m=l,h=d["".concat(s,".").concat(m)]||d[m]||p[m]||r;return n?a.createElement(h,o(o({ref:t},c),{},{components:n})):a.createElement(h,o({ref:t},c))}));function m(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,o=new Array(r);o[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:l,o[1]=i;for(var u=2;u<r;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(7294),l=n(6010);const r="tabItem_Ymn6";function o(e){let{children:t,hidden:n,className:o}=e;return a.createElement("div",{role:"tabpanel",className:(0,l.Z)(r,o),hidden:n},t)}},5488:(e,t,n)=>{n.d(t,{Z:()=>m});var a=n(7462),l=n(7294),r=n(6010),o=n(2389),i=n(7392),s=n(7094),u=n(2466);const c="tabList__CuJ",p="tabItem_LNqP";function d(e){var t;const{lazy:n,block:o,defaultValue:d,values:m,groupId:h,className:v}=e,b=l.Children.map(e.children,(e=>{if((0,l.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),f=m??b.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),g=(0,i.l)(f,((e,t)=>e.value===t.value));if(g.length>0)throw new Error(`Docusaurus error: Duplicate values "${g.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const k=null===d?d:d??(null==(t=b.find((e=>e.props.default)))?void 0:t.props.value)??b[0].props.value;if(null!==k&&!f.some((e=>e.value===k)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${k}" but none of its children has the corresponding value. Available values are: ${f.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:y,setTabGroupChoices:w}=(0,s.U)(),[N,T]=(0,l.useState)(k),O=[],{blockElementScrollPositionUntilNextRender:E}=(0,u.o5)();if(null!=h){const e=y[h];null!=e&&e!==N&&f.some((t=>t.value===e))&&T(e)}const P=e=>{const t=e.currentTarget,n=O.indexOf(t),a=f[n].value;a!==N&&(E(t),T(a),null!=h&&w(h,String(a)))},j=e=>{var t;let n=null;switch(e.key){case"ArrowRight":{const t=O.indexOf(e.currentTarget)+1;n=O[t]??O[0];break}case"ArrowLeft":{const t=O.indexOf(e.currentTarget)-1;n=O[t]??O[O.length-1];break}}null==(t=n)||t.focus()};return l.createElement("div",{className:(0,r.Z)("tabs-container",c)},l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":o},v)},f.map((e=>{let{value:t,label:n,attributes:o}=e;return l.createElement("li",(0,a.Z)({role:"tab",tabIndex:N===t?0:-1,"aria-selected":N===t,key:t,ref:e=>O.push(e),onKeyDown:j,onFocus:P,onClick:P},o,{className:(0,r.Z)("tabs__item",p,null==o?void 0:o.className,{"tabs__item--active":N===t})}),n??t)}))),n?(0,l.cloneElement)(b.filter((e=>e.props.value===N))[0],{className:"margin-top--md"}):l.createElement("div",{className:"margin-top--md"},b.map(((e,t)=>(0,l.cloneElement)(e,{key:t,hidden:e.props.value!==N})))))}function m(e){const t=(0,o.Z)();return l.createElement(d,(0,a.Z)({key:String(t)},e))}},5821:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>i,metadata:()=>u,toc:()=>p});var a=n(7462),l=(n(7294),n(3905)),r=n(5488),o=n(5162);n(4996);const i={id:"full-node-binaries",title:"Full Node Binaries",description:"Build your next blockchain app on ETM/P.",keywords:["docs","ETM/P"]},s=void 0,u={unversionedId:"develop/network-details/full-node-binaries",id:"develop/network-details/full-node-binaries",title:"Full Node Binaries",description:"Build your next blockchain app on ETM/P.",source:"@site/docs/develop/network-details/full-node-binaries.md",sourceDirName:"develop/network-details",slug:"/develop/network-details/full-node-binaries",permalink:"/docs/develop/network-details/full-node-binaries",draft:!1,editUrl:"/docs/develop/network-details/full-node-binaries.md",tags:[],version:"current",frontMatter:{id:"full-node-binaries",title:"Full Node Binaries",description:"Build your next blockchain app on ETM/P.",keywords:["docs","ETM/P"]},sidebar:"development",previous:{title:"Mapped Tokens",permalink:"/docs/develop/network-details/mapped-tokens"},next:{title:"Overview",permalink:"/docs/develop/metamask/overview"}},c={},p=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Overview",id:"overview",level:2},{value:"<strong>Install GO</strong>",id:"install-go",level:3},{value:"Setup node files",id:"setup-node-files",level:2},{value:"Fetch launch repo",id:"fetch-launch-repo",level:3},{value:"Install etmp-chain",id:"install-etmp-chain",level:3},{value:"Start services",id:"start-services",level:2},{value:"Prerequisites",id:"prerequisites-1",level:2},{value:"Overview",id:"overview-1",level:2},{value:"<strong>Install GO</strong>",id:"install-go-1",level:3},{value:"Setup node files",id:"setup-node-files-1",level:2},{value:"Fetch launch repo",id:"fetch-launch-repo-1",level:3},{value:"Install etmp-chain",id:"install-etmp-chain-1",level:3},{value:"Start services",id:"start-services-1",level:2}],d={toc:p};function m(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(r.Z,{defaultValue:"mainnet",values:[{label:"ETM/P-Mainnet",value:"mainnet"},{label:"ETM/P-Testnet",value:"testnet"}],mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"testnet",mdxType:"TabItem"},(0,l.kt)("p",null,"This section guides you through starting and running a full node on a binary."),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},"Steps in this guide involve waiting for the Heimdall and Bor services to fully sync. This process takes several days to complete.")),(0,l.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"One machine is needed."),(0,l.kt)("li",{parentName:"ul"},"Go 1.17 installed on both the Full Node machine.")),(0,l.kt)("h2",{id:"overview"},"Overview"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Have the one machine prepared."),(0,l.kt)("li",{parentName:"ul"},"Configure the Full node."),(0,l.kt)("li",{parentName:"ul"},"Start the Full node.")),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},"You have to follow the exact outlined sequence of actions, otherwise you will run into issues.")),(0,l.kt)("h3",{id:"install-go"},(0,l.kt)("strong",{parentName:"h3"},"Install GO")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"wget https://gist.githubusercontent.com/ssandeep/a6c7197811c83c71e5fead841bab396c/raw/go-install.sh\nbash go-install.sh\nsudo ln -nfs ~/.go/bin/go /usr/bin/go\n")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Note: Go version 1.17 is recommended")),(0,l.kt)("h2",{id:"setup-node-files"},"Setup node files"),(0,l.kt)("h3",{id:"fetch-launch-repo"},"Fetch launch repo"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"cd ~/\ngit clone https://github.com/ETM-Proterozoic/etmp-chain.git\n")),(0,l.kt)("h3",{id:"install-etmp-chain"},"Install etmp-chain"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"cd etmp-chain/\ngo build -o etmp-chain main.go\nsudo mv etmp-chain /usr/local/bin\n")),(0,l.kt)("h2",{id:"start-services"},"Start services"),(0,l.kt)("p",null,"Run the full Heimdall node with the following commands:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"wget https://raw.githubusercontent.com/ETMP/etmp-chain/develop/genesis-testnet.json -O genesis.json\netmp-chain server --data-dir ./node --chain genesis.json --jsonrpc 0.0.0.0:8545\n"))),(0,l.kt)(o.Z,{value:"mainnet",mdxType:"TabItem"},(0,l.kt)("h1",{id:"etmp-full-node-setup-using-binaries"},"ETM/P Full Node Setup Using Binaries"),(0,l.kt)("p",null,"This section guides you through starting and running a full node on a binary."),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},"Steps in this guide involve waiting for the Heimdall and Bor services to fully sync. This process takes several days to complete.")),(0,l.kt)("h2",{id:"prerequisites-1"},"Prerequisites"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"One machine is required."),(0,l.kt)("li",{parentName:"ul"},"Go 1.17 installed on both the Full Node machine.")),(0,l.kt)("h2",{id:"overview-1"},"Overview"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Have the one machine prepared."),(0,l.kt)("li",{parentName:"ul"},"Configure the Full node."),(0,l.kt)("li",{parentName:"ul"},"Start the Full node.")),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},"You have to follow the exact outlined sequence of actions, otherwise you will run into issues.")),(0,l.kt)("h3",{id:"install-go-1"},(0,l.kt)("strong",{parentName:"h3"},"Install GO")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"wget https://gist.githubusercontent.com/ssandeep/a6c7197811c83c71e5fead841bab396c/raw/go-install.sh\nbash go-install.sh\nsudo ln -nfs ~/.go/bin/go /usr/bin/go\n")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Note: Go version 1.17 is recommended")),(0,l.kt)("h2",{id:"setup-node-files-1"},"Setup node files"),(0,l.kt)("h3",{id:"fetch-launch-repo-1"},"Fetch launch repo"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"cd ~/\ngit clone https://github.com/ETM-Proterozoic/etmp-chain.git\n")),(0,l.kt)("h3",{id:"install-etmp-chain-1"},"Install etmp-chain"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"cd etmp-chain/\ngo build -o etmp-chain main.go\nsudo mv etmp-chain /usr/local/bin\n")),(0,l.kt)("h2",{id:"start-services-1"},"Start services"),(0,l.kt)("p",null,"Run the full Heimdall node with the following commands:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"wget https://raw.githubusercontent.com/ETMP/etmp-chain/develop/genesis.json -O genesis.json\netmp-chain server --data-dir ./node --chain genesis.json --jsonrpc 0.0.0.0:8545\n")))))}m.isMDXComponent=!0}}]);