"use strict";(self.webpackChunketmp=self.webpackChunketmp||[]).push([[6117],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),l=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=l(n),m=a,f=d["".concat(i,".").concat(m)]||d[m]||p[m]||o;return n?r.createElement(f,c(c({ref:t},u),{},{components:n})):r.createElement(f,c({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,c=new Array(o);c[0]=d;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:a,c[1]=s;for(var l=2;l<o;l++)c[l]=n[l];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5778:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>c,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var r=n(7462),a=(n(7294),n(3905));const o={id:"accounts",title:"What are Accounts?",sidebar_label:"Accounts",description:"Build your next blockchain app on ETM/P.",keywords:["docs","ETM/P"]},c=void 0,s={unversionedId:"basics/accounts",id:"basics/accounts",title:"What are Accounts?",description:"Build your next blockchain app on ETM/P.",source:"@site/docs/basics/basics-accounts.md",sourceDirName:"basics",slug:"/basics/accounts",permalink:"/docs/basics/accounts",draft:!1,editUrl:"/docs/basics/basics-accounts.md",tags:[],version:"current",frontMatter:{id:"accounts",title:"What are Accounts?",sidebar_label:"Accounts",description:"Build your next blockchain app on ETM/P.",keywords:["docs","ETM/P"]},sidebar:"introduction",previous:{title:"Gas",permalink:"/docs/basics/gas"},next:{title:"Importing an Account to Metamask",permalink:"/docs/basics/import-account-to-metamask"}},i={},l=[{value:"<strong>\ud83d\udcdcResources</strong>",id:"resources",level:3}],u={toc:l};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The global state of Ethereum is comprised of accounts that interact with one another through a message-passing framework. The most basic interaction is that of sending some value - like etmp tokens, ether - the native cryptocurrency of Ethereum blockchain.\nEach account is identified by a 20 byte hex identifier which is called an address - this is generated from public key of the account.\nThere exist two types of accounts:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Externally Owned Account - An account controlled by a private key, and if you own the private key associated with the account you have the ability to send tokens and messages from it."),(0,a.kt)("li",{parentName:"ol"},"Contract Owned Account - An account that has an associated smart contract code with it and its private key is not owned by anyone")),(0,a.kt)("p",null,"These can be differentiated as follows:"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Externally Owned Accounts")," "),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"can send transactions (ether transfer or trigger contract code)"),(0,a.kt)("li",{parentName:"ol"},"is controlled by private keys"),(0,a.kt)("li",{parentName:"ol"},"has no associated code")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Contract Owned Accounts")," "),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"has associated code"),(0,a.kt)("li",{parentName:"ol"},"code execution is triggered by transactions or messages (calls) received from other contracts"),(0,a.kt)("li",{parentName:"ol"},"when executed - perform operations of arbitrary complexity (Turing completeness) - manipulate its own persistent storage, i.e., can have its own permanent state - can call other contracts.")),(0,a.kt)("h3",{id:"resources"},(0,a.kt)("strong",{parentName:"h3"},"\ud83d\udcdcResources")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/ethereum/homestead-guide/blob/master/source/contracts-and-transactions/account-types-gas-and-transactions.rst#externally-owned-accounts-eoas"},"Read more about accounts")))}p.isMDXComponent=!0}}]);